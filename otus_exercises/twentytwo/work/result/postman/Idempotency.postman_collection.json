{
	"info": {
		"_postman_id": "1ea6ccf4-c43e-4397-b029-46f8d4b0c784",
		"name": "Idempotency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30113005",
		"_collection_link": "https://www.postman.com/alexizum/workspace/otus-exercise-microservice-alex-izum/collection/30113005-1ea6ccf4-c43e-4397-b029-46f8d4b0c784?action=share&source=collection_link&creator=30113005"
	},
	"item": [
		{
			"name": "CreateOrder",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"baseUrl\", \"arch.homework\");\r",
							"pm.collectionVariables.set(\"guidG\", pm.variables.replaceIn('{{$randomUUID}}'));\r",
							"pm.collectionVariables.set(\"priceG\", pm.variables.replaceIn('{{$randomPrice}}'));\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"order_number\", responseJSON[\"data\"]);\r",
							"\r",
							"pm.test(\"test token data\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"guid\":\"{{guidG}}\",\"order\":{\"id\":0,\"userid\":1,\"price\":{{priceG}},\"status\":\"accept\",\"number\":0,\"version\":\"\"}}\r\n"
				},
				"url": {
					"raw": "http://{{baseUrl}}/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"version\", jsonData.data.version);\r",
							"\r",
							"\r",
							"pm.test(\"test response\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.success).to.eql(true)\r",
							"pm.expect(jsonData.data.number).to.eql(pm.collectionVariables.get(\"order_number\"))\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/order?ordernumber={{order_number}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order"
					],
					"query": [
						{
							"key": "ordernumber",
							"value": "{{order_number}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test update\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.errorCode).to.eql(\"200\")\r",
							"pm.expect(jsonData.message).to.eql(\"order updated\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"guidG2\", pm.variables.replaceIn('{{$randomUUID}}'));\r",
							"pm.collectionVariables.set(\"priceG2\", pm.variables.replaceIn('{{$randomPrice}}'));\r",
							"\r",
							" \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"guid\":\"{{guidG2}}\",\"order\":{\"id\":0,\"userid\":1,\"price\":{{priceG2}},\"status\":\"payment\",\"number\":{{order_number}},\"version\":\"{{version}}\"}}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/order{{order_number}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order{{order_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Order_After_Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"test response\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.success).to.eql(true);\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/order?ordernumber={{order_number}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order"
					],
					"query": [
						{
							"key": "ordernumber",
							"value": "{{order_number}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateOrder_Repeat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"order_number\", responseJSON[\"data\"]);\r",
							"\r",
							"pm.test(\"test token data\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.success).to.eql(true)\r",
							"pm.expect(jsonData.data).to.eql(pm.collectionVariables.get(\"order_number\"))\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"guid\":\"{{guidG}}\",\"order\":{\"id\":0,\"userid\":1,\"price\":{{priceG}},\"status\":\"accept\",\"number\":0,\"version\":\"\"}}\r\n"
				},
				"url": {
					"raw": "http://{{baseUrl}}/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder_Repeat_Unversion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test update\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.errorCode).to.eql(\"3043\")\r",
							"pm.expect(jsonData.message).to.eql(\"data is out of date\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"guidG3\", pm.variables.replaceIn('{{$randomUUID}}'));\r",
							"pm.collectionVariables.set(\"priceG2\", pm.variables.replaceIn('{{$randomPrice}}'));\r",
							"pm.collectionVariables.set(\"other_version\", pm.variables.replaceIn('{{$randomUUID}}'));\r",
							"\r",
							" \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"guid\":\"{{guidG3}}\",\"order\":{\"id\":0,\"userid\":1,\"price\":{{priceG2}},\"status\":\"payment\",\"number\":{{order_number}},\"version\":\"{{other_version}}\"}}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/order{{order_number}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order{{order_number}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder_Eq_Version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test update\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.errorCode).to.eql(\"200\")\r",
							"pm.expect(jsonData.message).to.eql(\"order updated\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"guidG2\", pm.variables.replaceIn('{{$randomUUID}}'));\r",
							"pm.collectionVariables.set(\"priceG2\", pm.variables.replaceIn('{{$randomPrice}}'));\r",
							"\r",
							" \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"guid\":\"{{guidG2}}\",\"order\":{\"id\":0,\"userid\":1,\"price\":{{priceG2}},\"status\":\"payment\",\"number\":{{order_number}},\"version\":\"{{version}}\"}}"
				},
				"url": {
					"raw": "http://{{baseUrl}}/order{{order_number}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order{{order_number}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "guidG",
			"value": ""
		},
		{
			"key": "priceG",
			"value": ""
		},
		{
			"key": "order_number",
			"value": ""
		},
		{
			"key": "version",
			"value": ""
		},
		{
			"key": "guidG2",
			"value": ""
		},
		{
			"key": "priceG2",
			"value": ""
		},
		{
			"key": "versionG2",
			"value": ""
		},
		{
			"key": "guidG3",
			"value": ""
		},
		{
			"key": "other_version",
			"value": ""
		}
	]
}